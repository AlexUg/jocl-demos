<?xml version="1.0" encoding="UTF-8"?>

<project name="jocl-demos" default="default" basedir=".">
    <description>Builds, tests, and runs the project jocl-demos.</description>

    <condition property="rootrel.build" value="build">
      <not>
          <isset property="rootrel.build"/>
      </not>
    </condition>

    <import file="nbproject/build-impl.xml"/>
    
    <property file="nbproject/project.properties" />

    <!-- Pull in GlueGen cpptasks build file -->
    <import file="${gluegen.root}/make/gluegen-cpptasks.xml" />
    <import file="${gluegen.root}/make/jogamp-env.xml" />
    <import file="${gluegen.root}/make/jogamp-archivetasks.xml" />

    <target name="-pre-init" depends="jogamp.env.init">
        <property name="javac.debug" value="${javacdebug}"/>
        <property name="javac.source" value="${target.sourcelevel}"/>
        <property name="javac.target" value="${target.targetlevel}"/>
        <property name="javac.compilerargs" value="-bootclasspath ${target.rt.jar} -Xlint -g:${javacdebuglevel}"/>
    </target>

    <target name="-pre-jar" depends="jogamp.env.init">
        <tstamp>
            <format property="version.timestamp" pattern="yyyyMMdd"/>
        </tstamp>

        <property name="jocl-demos.build.number" value="manual" />
        <property name="jocl-demos.build.id"     value="${version.timestamp}" />
        <property name="jocl-demos.build.branch" value="master" />
        <property name="jocl-demos.build.commit" value="manual" />

        <property name="jocl-demos.version" value="${jocl_demos_base_version}-b${jocl-demos.build.number}-${version.timestamp}" />
    </target>

    <target name="-post-jar" depends="tag.build,create-all-jnlps,gluegen.cpptasks.detect.os,build-archive"/>

    <target name="build-archive" if="build.archiveon">
        <property name="archive.zip.name" value="jocl-demos-${jocl-demos.version}-${os.and.arch}"/>
        
        <mkdir dir="${build.dir}/${archive.zip.name}"/>
        
        <copy todir="${build.dir}/${archive.zip.name}" >
            <fileset dir="." includes="www/**"/>
            <fileset dir="${build.dir}" includes="jar/**"/>
            <fileset dir="${build.dir}" includes="jnlp-files/**"/>
            <fileset dir="${build.dir}" includes="*.properties"/>
        </copy>
        
        <archive.7z basedir="${build.dir}" destfile="${build.dir}/${archive.zip.name}.7z"  includes="${archive.zip.name}/**"/>

        <delete dir="${build.dir}/${archive.zip.name}"/>
        
    </target>

    <target name="create-all-jnlps">

        <!-- preset properties for local testing -->
        <property name="jocl.codepase"       value="JOCL_CODEBASE_TAG"/>
        <property name="jogl.codepase"       value="JOGL_CODEBASE_TAG"/>
        <property name="jocl-demos.codepase" value="DEMO_CODEBASE_TAG"/>
        
        <antcall target="create-jnlp" inheritrefs="true">
            <param name="jnlp.name"         value="glclinterop"/>
            <param name="jnlp.title"        value="JOGL - JOCL interoperability example."/>
            <param name="jnlp.jogl"         value="true"/>
            <param name="jnlp.mainclass"    value="com.jogamp.opencl.demos.joglinterop.GLCLInteroperabilityDemo"/>
        </antcall>

        <antcall target="create-jnlp" inheritrefs="true">
            <param name="jnlp.name"         value="julia3d"/>
            <param name="jnlp.title"        value="3D Julia Set Fractal demo."/>
            <param name="jnlp.jogl"         value="true"/>
            <param name="jnlp.mainclass"    value="com.jogamp.opencl.demos.julia3d.Julia3d"/>
        </antcall>

        <antcall target="create-jnlp" inheritrefs="true">
            <param name="jnlp.name"         value="multi-device-fractal"/>
            <param name="jnlp.title"        value="Multi Device Mandelbrot Fractal example."/>
            <param name="jnlp.jogl"         value="true"/>
            <param name="jnlp.mainclass"    value="com.jogamp.opencl.demos.fractal.MultiDeviceFractal"/>
        </antcall>

        <antcall target="create-jnlp" inheritrefs="true">
            <param name="jnlp.name"         value="clinfo"/>
            <param name="jnlp.title"        value="OpenCL diagnostics."/>
            <param name="jnlp.jogl"         value="false"/>
            <param name="jnlp.mainclass"    value="com.jogamp.opencl.demos.info.CLInfo"/>
        </antcall>

        <antcall target="create-jnlp" inheritrefs="true">
            <param name="jnlp.name"         value="gamma"/>
            <param name="jnlp.title"        value="Simple gamma correction."/>
            <param name="jnlp.jogl"         value="false"/>
            <param name="jnlp.mainclass"    value="com.jogamp.opencl.demos.gamma.CLSimpleGammaCorrection"/>
        </antcall>
        
    </target>

    <target name="tag.build">
        <copy file="${jocl.root}/dist/artifact.properties" todir="${build.dir}" overwrite="true"/>
        <echo file="${build.dir}/artifact.properties" message="jocl-demos.build.number=${jocl-demos.build.number}${line.separator}" append="true" />
        <echo file="${build.dir}/artifact.properties" message="jocl-demos.build.id=${jocl-demos.build.id}${line.separator}" append="true" />
        <echo file="${build.dir}/artifact.properties" message="jocl-demos.build.branch=${jocl-demos.build.branch}${line.separator}" append="true" />
        <echo file="${build.dir}/artifact.properties" message="jocl-demos.build.commit=${jocl-demos.build.commit}${line.separator}" append="true" />
    </target>

    <target name="create-jnlp">
        <condition  property="jogl.extension"
                    value='&lt;extension name="jogl-all-awt" href="${jogl.codepase}/jogl-all-awt.jnlp"/&gt;'
                    else="">
            <istrue value="${jnlp.jogl}"/>
        </condition>
        <copy file="demo-template.jnlp" tofile="${build.dir}/jnlp-files/${jnlp.name}.jnlp">
            <filterchain>
                <replacestring from="DEMO_TITLE" to="${jnlp.title}"/>
                <replacestring from="NAME_TAG" to="${jnlp.name}"/>
                <replacestring from="CLASS_TAG" to="${jnlp.mainclass}"/>
                <replacestring from="DEMO_CODEBASE_TAG" to="${jocl-demos.codepase}"/>
                <replacestring from="JOCL_CODEBASE_TAG" to="${jocl.codepase}"/>
                <replacestring from="EXTENSION" to="${jogl.extension}"/>
            </filterchain>
        </copy>
    </target>

</project>
